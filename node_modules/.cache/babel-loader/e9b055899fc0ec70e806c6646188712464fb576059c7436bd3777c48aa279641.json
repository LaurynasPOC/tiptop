{"ast":null,"code":"var _jsxFileName = \"/Users/besk/Desktop/portfolio projects/tiptop/src/components/Video.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { ReactComponent as IconOn } from '@assets/svg/sound_on.svg';\nimport { ReactComponent as IconOff } from '@assets/svg/sound_off.svg';\nimport Preloader from '@assets/svg/preloader.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoStyles = styled.div`\n\twidth: ${_ref => {\n  let {\n    width\n  } = _ref;\n  return width || '100%';\n}};\n\theight: ${_ref2 => {\n  let {\n    height\n  } = _ref2;\n  return height || '100%';\n}};\n\tvideo {\n\t\tbackground-image: url(${Preloader});\n\t\tbackground-position: center;\n\t\tbackground-repeat: no-repeat;\n\t\twidth: 100%;\n\t}\n\t& > svg {\n\t\tcursor: pointer;\n\t\tposition: absolute;\n\t\tbottom: ${_ref3 => {\n  let {\n    bottom\n  } = _ref3;\n  return bottom || '200px';\n}};\n\t\tright: 40px;\n\t}\n`;\n_c = VideoStyles;\nconst Video = _ref4 => {\n  _s();\n  let {\n    src,\n    bottom,\n    width,\n    height\n  } = _ref4;\n  const [muted, setMuted] = useState(true);\n  const videoRef = useRef(null);\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = 1;\n    }\n  }, [videoRef]);\n  const toggleMute = () => {\n    setMuted(!muted);\n  };\n  return /*#__PURE__*/_jsxDEV(VideoStyles, {\n    bottom: bottom,\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: muted,\n      preload: \"auto\",\n      playsInline: true,\n      loop: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: src,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), muted ? /*#__PURE__*/_jsxDEV(IconOff, {\n      onClick: toggleMute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(IconOn, {\n      onClick: toggleMute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 48\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n};\n_s(Video, \"vX2iGk67P5szFmsdI/ILsXZ46gM=\");\n_c2 = Video;\nexport default Video;\nvar _c, _c2;\n$RefreshReg$(_c, \"VideoStyles\");\n$RefreshReg$(_c2, \"Video\");","map":{"version":3,"names":["React","useEffect","useState","useRef","styled","ReactComponent","IconOn","IconOff","Preloader","VideoStyles","div","width","height","bottom","Video","src","muted","setMuted","videoRef","current","playbackRate","toggleMute"],"sources":["/Users/besk/Desktop/portfolio projects/tiptop/src/components/Video.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { ReactComponent as IconOn } from '@assets/svg/sound_on.svg';\nimport { ReactComponent as IconOff } from '@assets/svg/sound_off.svg';\nimport Preloader from '@assets/svg/preloader.svg';\n\ninterface Props {\n\tbottom?: string | number;\n\twidth?: string;\n\theight?: string;\n}\n\nconst VideoStyles = styled.div<Props>`\n\twidth: ${({ width }) => width || '100%'};\n\theight: ${({ height }) => height || '100%'};\n\tvideo {\n\t\tbackground-image: url(${Preloader});\n\t\tbackground-position: center;\n\t\tbackground-repeat: no-repeat;\n\t\twidth: 100%;\n\t}\n\t& > svg {\n\t\tcursor: pointer;\n\t\tposition: absolute;\n\t\tbottom: ${({ bottom }) => bottom || '200px'};\n\t\tright: 40px;\n\t}\n`;\n\ninterface VideoProps extends Props {\n\tsrc: string;\n}\n\nconst Video: React.FC<VideoProps> = ({ src, bottom, width, height }) => {\n\tconst [muted, setMuted] = useState(true);\n\tconst videoRef = useRef<HTMLVideoElement>(null);\n\n\tuseEffect(() => {\n\t\tif (videoRef.current) {\n\t\t\tvideoRef.current.playbackRate = 1;\n\t\t}\n\t}, [videoRef]);\n\n\tconst toggleMute = () => {\n\t\tsetMuted(!muted);\n\t};\n\n\treturn (\n\t\t<VideoStyles bottom={bottom}>\n\t\t\t<video ref={videoRef} autoPlay muted={muted} preload='auto' playsInline loop>\n\t\t\t\t<source src={src} type='video/mp4' />\n\t\t\t</video>\n\t\t\t{muted ? <IconOff onClick={toggleMute} /> : <IconOn onClick={toggleMute} />}\n\t\t</VideoStyles>\n\t);\n};\n\nexport default Video;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,cAAc,IAAIC,MAAM,QAAQ,0BAA0B;AACnE,SAASD,cAAc,IAAIE,OAAO,QAAQ,2BAA2B;AACrE,OAAOC,SAAS,MAAM,2BAA2B;AAAC;AAQlD,MAAMC,WAAW,GAAGL,MAAM,CAACM,GAAW;AACtC,UAAU;EAAA,IAAC;IAAEC;EAAM,CAAC;EAAA,OAAKA,KAAK,IAAI,MAAM;AAAA,CAAC;AACzC,WAAW;EAAA,IAAC;IAAEC;EAAO,CAAC;EAAA,OAAKA,MAAM,IAAI,MAAM;AAAA,CAAC;AAC5C;AACA,0BAA0BJ,SAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;EAAA,IAAC;IAAEK;EAAO,CAAC;EAAA,OAAKA,MAAM,IAAI,OAAO;AAAA,CAAC;AAC9C;AACA;AACA,CAAC;AAAC,KAfIJ,WAAW;AAqBjB,MAAMK,KAA2B,GAAG,SAAoC;EAAA;EAAA,IAAnC;IAAEC,GAAG;IAAEF,MAAM;IAAEF,KAAK;IAAEC;EAAO,CAAC;EAClE,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMgB,QAAQ,GAAGf,MAAM,CAAmB,IAAI,CAAC;EAE/CF,SAAS,CAAC,MAAM;IACf,IAAIiB,QAAQ,CAACC,OAAO,EAAE;MACrBD,QAAQ,CAACC,OAAO,CAACC,YAAY,GAAG,CAAC;IAClC;EACD,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,MAAMG,UAAU,GAAG,MAAM;IACxBJ,QAAQ,CAAC,CAACD,KAAK,CAAC;EACjB,CAAC;EAED,oBACC,QAAC,WAAW;IAAC,MAAM,EAAEH,MAAO;IAAA,wBAC3B;MAAO,GAAG,EAAEK,QAAS;MAAC,QAAQ;MAAC,KAAK,EAAEF,KAAM;MAAC,OAAO,EAAC,MAAM;MAAC,WAAW;MAAC,IAAI;MAAA,uBAC3E;QAAQ,GAAG,EAAED,GAAI;QAAC,IAAI,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC9B,EACPC,KAAK,gBAAG,QAAC,OAAO;MAAC,OAAO,EAAEK;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,gBAAG,QAAC,MAAM;MAAC,OAAO,EAAEA;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9D;AAEhB,CAAC;AAAC,GAtBIP,KAA2B;AAAA,MAA3BA,KAA2B;AAwBjC,eAAeA,KAAK;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}