{"ast":null,"code":"var _jsxFileName = \"/Users/besk/Desktop/portfolio projects/tiptop/src/components/Video.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { ReactComponent as IconOn } from '@assets/svg/sound_on.svg';\nimport { ReactComponent as IconOff } from '@assets/svg/sound_off.svg';\nimport Preloader from '@assets/svg/preloader.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoStyles = styled.div`\n  position: relative;\n  width: 100vw;\n  height: 100%;\n  video {\n    background-image: url(${Preloader});\n    background-position: center;\n    background-repeat: no-repeat;\n    width: 100%;\n  }\n  & > svg {\n    cursor: pointer;\n    position: absolute;\n    bottom: 200px;\n    right: 40px;\n  }\n`;\n_c = VideoStyles;\nconst Video = _ref => {\n  _s();\n  let {\n    src,\n    bottom\n  } = _ref;\n  const [muted, setMuted] = useState(true);\n  const videoRef = useRef(null);\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = 1;\n    }\n  }, [videoRef]);\n  const toggleMute = () => {\n    setMuted(!muted);\n  };\n  return /*#__PURE__*/_jsxDEV(VideoStyles, {\n    bottom: bottom,\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: muted,\n      preload: \"auto\",\n      playsInline: true,\n      loop: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: src,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), muted ? /*#__PURE__*/_jsxDEV(IconOff, {\n      onClick: toggleMute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(IconOn, {\n      onClick: toggleMute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 51\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Video, \"vX2iGk67P5szFmsdI/ILsXZ46gM=\");\n_c2 = Video;\nexport default Video;\nvar _c, _c2;\n$RefreshReg$(_c, \"VideoStyles\");\n$RefreshReg$(_c2, \"Video\");","map":{"version":3,"names":["React","useEffect","useState","useRef","styled","ReactComponent","IconOn","IconOff","Preloader","VideoStyles","div","Video","src","bottom","muted","setMuted","videoRef","current","playbackRate","toggleMute"],"sources":["/Users/besk/Desktop/portfolio projects/tiptop/src/components/Video.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { ReactComponent as IconOn } from '@assets/svg/sound_on.svg';\nimport { ReactComponent as IconOff } from '@assets/svg/sound_off.svg';\nimport Preloader from '@assets/svg/preloader.svg';\n\ninterface Props {\n  bottom?: string | number;\n}\n\nconst VideoStyles = styled.div<Props>`\n  position: relative;\n  width: 100vw;\n  height: 100%;\n  video {\n    background-image: url(${Preloader});\n    background-position: center;\n    background-repeat: no-repeat;\n    width: 100%;\n  }\n  & > svg {\n    cursor: pointer;\n    position: absolute;\n    bottom: 200px;\n    right: 40px;\n  }\n`;\n\ninterface VideoProps extends Props {\n  src: string;\n}\n\nconst Video: React.FC<VideoProps> = ({ src, bottom }) => {\n  const [muted, setMuted] = useState(true);\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = 1;\n    }\n  }, [videoRef]);\n\n  const toggleMute = () => {\n    setMuted(!muted);\n  };\n\n  return (\n    <VideoStyles bottom={bottom}>\n      <video ref={videoRef} autoPlay muted={muted} preload=\"auto\" playsInline loop>\n        <source src={src} type=\"video/mp4\" />\n      </video>\n      {muted ? <IconOff onClick={toggleMute} /> : <IconOn onClick={toggleMute} />}\n    </VideoStyles>\n  );\n};\n\nexport default Video;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,cAAc,IAAIC,MAAM,QAAQ,0BAA0B;AACnE,SAASD,cAAc,IAAIE,OAAO,QAAQ,2BAA2B;AACrE,OAAOC,SAAS,MAAM,2BAA2B;AAAC;AAMlD,MAAMC,WAAW,GAAGL,MAAM,CAACM,GAAW;AACtC;AACA;AACA;AACA;AACA,4BAA4BF,SAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,KAhBIC,WAAW;AAsBjB,MAAME,KAA2B,GAAG,QAAqB;EAAA;EAAA,IAApB;IAAEC,GAAG;IAAEC;EAAO,CAAC;EAClD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMc,QAAQ,GAAGb,MAAM,CAAmB,IAAI,CAAC;EAE/CF,SAAS,CAAC,MAAM;IACd,IAAIe,QAAQ,CAACC,OAAO,EAAE;MACpBD,QAAQ,CAACC,OAAO,CAACC,YAAY,GAAG,CAAC;IACnC;EACF,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,MAAMG,UAAU,GAAG,MAAM;IACvBJ,QAAQ,CAAC,CAACD,KAAK,CAAC;EAClB,CAAC;EAED,oBACE,QAAC,WAAW;IAAC,MAAM,EAAED,MAAO;IAAA,wBAC1B;MAAO,GAAG,EAAEG,QAAS;MAAC,QAAQ;MAAC,KAAK,EAAEF,KAAM;MAAC,OAAO,EAAC,MAAM;MAAC,WAAW;MAAC,IAAI;MAAA,uBAC1E;QAAQ,GAAG,EAAEF,GAAI;QAAC,IAAI,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC/B,EACPE,KAAK,gBAAG,QAAC,OAAO;MAAC,OAAO,EAAEK;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,gBAAG,QAAC,MAAM;MAAC,OAAO,EAAEA;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/D;AAElB,CAAC;AAAC,GAtBIR,KAA2B;AAAA,MAA3BA,KAA2B;AAwBjC,eAAeA,KAAK;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}