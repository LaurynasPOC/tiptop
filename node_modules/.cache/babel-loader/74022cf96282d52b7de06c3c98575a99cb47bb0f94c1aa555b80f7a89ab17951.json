{"ast":null,"code":"var _jsxFileName = \"/Users/besk/Desktop/portfolio projects/tiptop/src/components/navigation/MobNavbar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ReactComponent as Logo } from '../../assets/logo.svg';\nimport { HashLink } from '@components/links';\nimport { Box } from '@components/wrappers';\nimport styled from 'styled-components';\nimport { NavbarData } from './NavbarData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NavbarController = styled.div`\n\twidth: 100%;\n\tpadding: 15px 20px;\n\tposition: fixed;\n\tdisplay: flex;\n\ttop: 0;\n\tleft: 0;\n\tjustify-content: space-between;\n\talign-items: center;\n\tbackground: rgba(0, 0, 0, 0.3);\n\tbackdrop-filter: blur(15px);\n\t& > a > svg {\n\t\twidth: 140px;\n\t}\n\t& > div {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\tflex-direction: column;\n\t\twidth: 30px;\n\t\theight: 30px;\n\t\tmargin: 10px;\n\t\tcursor: pointer;\n\t\tdiv {\n\t\t\twidth: 30px;\n\t\t\theight: 0.3em;\n\t\t\tmargin: 3px 0;\n\t\t\tbackground-color: ${_ref => {\n  let {\n    isOpen\n  } = _ref;\n  return isOpen ? 'var(--lbg)' : 'var(--subtext)';\n}};\n\t\t\tborder-radius: 20px;\n\t\t\ttransition: all 0.5s;\n\t\t\t:first-of-type {\n\t\t\t\ttransform: ${_ref2 => {\n  let {\n    isOpen\n  } = _ref2;\n  return isOpen && 'rotate3d(0, 0, 1, 45deg) translate(3.5px, 3px)';\n}};\n\t\t\t}\n\t\t\t:nth-of-type(2) {\n\t\t\t\tdisplay: ${_ref3 => {\n  let {\n    isOpen\n  } = _ref3;\n  return isOpen && 'none';\n}};\n\t\t\t}\n\t\t\t:last-of-type {\n\t\t\t\ttransform: ${_ref4 => {\n  let {\n    isOpen\n  } = _ref4;\n  return isOpen && 'rotate3d(0, 0, 1, 135deg) translate(-3.7px, 3px)';\n}};\n\t\t\t}\n\t\t}\n\t}\n\t& > nav {\n\t\tposition: fixed;\n\t\twidth: 300px;\n\t\ttop: 80px;\n\t}\n`;\n_c = NavbarController;\nconst MobNavbar = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(NavbarController, {\n      isOpen: isOpen,\n      children: [/*#__PURE__*/_jsxDEV(HashLink, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        onClick: () => setIsOpen(!isOpen),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: NavbarData.map(_ref5 => {\n          let {\n            to,\n            text\n          } = _ref5;\n          return /*#__PURE__*/_jsxDEV(HashLink, {\n            to: to,\n            children: text\n          }, to, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 7\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n_s(MobNavbar, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c2 = MobNavbar;\nexport default MobNavbar;\nvar _c, _c2;\n$RefreshReg$(_c, \"NavbarController\");\n$RefreshReg$(_c2, \"MobNavbar\");","map":{"version":3,"names":["React","useState","ReactComponent","Logo","HashLink","Box","styled","NavbarData","NavbarController","div","isOpen","MobNavbar","setIsOpen","map","to","text"],"sources":["/Users/besk/Desktop/portfolio projects/tiptop/src/components/navigation/MobNavbar.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { ReactComponent as Logo } from '../../assets/logo.svg';\nimport { HashLink } from '@components/links';\nimport { Box } from '@components/wrappers';\nimport styled from 'styled-components';\nimport { NavbarData } from './NavbarData';\n\ninterface MobNavProps {\n\tisOpen: boolean;\n}\n\nconst NavbarController = styled.div<MobNavProps>`\n\twidth: 100%;\n\tpadding: 15px 20px;\n\tposition: fixed;\n\tdisplay: flex;\n\ttop: 0;\n\tleft: 0;\n\tjustify-content: space-between;\n\talign-items: center;\n\tbackground: rgba(0, 0, 0, 0.3);\n\tbackdrop-filter: blur(15px);\n\t& > a > svg {\n\t\twidth: 140px;\n\t}\n\t& > div {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\tflex-direction: column;\n\t\twidth: 30px;\n\t\theight: 30px;\n\t\tmargin: 10px;\n\t\tcursor: pointer;\n\t\tdiv {\n\t\t\twidth: 30px;\n\t\t\theight: 0.3em;\n\t\t\tmargin: 3px 0;\n\t\t\tbackground-color: ${({ isOpen }) => (isOpen ? 'var(--lbg)' : 'var(--subtext)')};\n\t\t\tborder-radius: 20px;\n\t\t\ttransition: all 0.5s;\n\t\t\t:first-of-type {\n\t\t\t\ttransform: ${({ isOpen }) => isOpen && 'rotate3d(0, 0, 1, 45deg) translate(3.5px, 3px)'};\n\t\t\t}\n\t\t\t:nth-of-type(2) {\n\t\t\t\tdisplay: ${({ isOpen }) => isOpen && 'none'};\n\t\t\t}\n\t\t\t:last-of-type {\n\t\t\t\ttransform: ${({ isOpen }) => isOpen && 'rotate3d(0, 0, 1, 135deg) translate(-3.7px, 3px)'};\n\t\t\t}\n\t\t}\n\t}\n\t& > nav {\n\t\tposition: fixed;\n\t\twidth: 300px;\n\t\ttop: 80px;\n\t}\n`;\n\nconst MobNavbar: React.FC = () => {\n\tconst [isOpen, setIsOpen] = useState(false);\n\treturn (\n\t\t<>\n\t\t\t<NavbarController isOpen={isOpen}>\n\t\t\t\t<HashLink to='/'>\n\t\t\t\t\t<Logo />\n\t\t\t\t</HashLink>\n\t\t\t\t<Box onClick={() => setIsOpen(!isOpen)}>\n\t\t\t\t\t<div />\n\t\t\t\t\t<div />\n\t\t\t\t\t<div />\n\t\t\t\t</Box>\n\t\t\t\t<nav>\n\t\t\t\t\t{NavbarData.map(({ to, text }) => (\n\t\t\t\t\t\t<HashLink key={to} to={to}>\n\t\t\t\t\t\t\t{text}\n\t\t\t\t\t\t</HashLink>\n\t\t\t\t\t))}\n\t\t\t\t</nav>\n\t\t\t</NavbarController>\n\t\t</>\n\t);\n};\n\nexport default MobNavbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,IAAIC,IAAI,QAAQ,uBAAuB;AAC9D,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,GAAG,QAAQ,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,UAAU,QAAQ,cAAc;AAAC;AAAA;AAM1C,MAAMC,gBAAgB,GAAGF,MAAM,CAACG,GAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;EAAA,IAAC;IAAEC;EAAO,CAAC;EAAA,OAAMA,MAAM,GAAG,YAAY,GAAG,gBAAgB;AAAA,CAAE;AAClF;AACA;AACA;AACA,iBAAiB;EAAA,IAAC;IAAEA;EAAO,CAAC;EAAA,OAAKA,MAAM,IAAI,gDAAgD;AAAA,CAAC;AAC5F;AACA;AACA,eAAe;EAAA,IAAC;IAAEA;EAAO,CAAC;EAAA,OAAKA,MAAM,IAAI,MAAM;AAAA,CAAC;AAChD;AACA;AACA,iBAAiB;EAAA,IAAC;IAAEA;EAAO,CAAC;EAAA,OAAKA,MAAM,IAAI,kDAAkD;AAAA,CAAC;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,KA7CIF,gBAAgB;AA+CtB,MAAMG,SAAmB,GAAG,MAAM;EAAA;EACjC,MAAM,CAACD,MAAM,EAAEE,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3C,oBACC;IAAA,uBACC,QAAC,gBAAgB;MAAC,MAAM,EAAES,MAAO;MAAA,wBAChC,QAAC,QAAQ;QAAC,EAAE,EAAC,GAAG;QAAA,uBACf,QAAC,IAAI;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACE,eACX,QAAC,GAAG;QAAC,OAAO,EAAE,MAAME,SAAS,CAAC,CAACF,MAAM,CAAE;QAAA,wBACtC;UAAA;UAAA;UAAA;QAAA,QAAO,eACP;UAAA;UAAA;UAAA;QAAA,QAAO,eACP;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QACF,eACN;QAAA,UACEH,UAAU,CAACM,GAAG,CAAC;UAAA,IAAC;YAAEC,EAAE;YAAEC;UAAK,CAAC;UAAA,oBAC5B,QAAC,QAAQ;YAAU,EAAE,EAAED,EAAG;YAAA,UACxBC;UAAI,GADSD,EAAE;YAAA;YAAA;YAAA;UAAA,QAEN;QAAA,CACX;MAAC;QAAA;QAAA;QAAA;MAAA,QACG;IAAA;MAAA;MAAA;MAAA;IAAA;EACY,iBACjB;AAEL,CAAC;AAAC,GAvBIH,SAAmB;AAAA,MAAnBA,SAAmB;AAyBzB,eAAeA,SAAS;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}