{"ast":null,"code":"var _jsxFileName = \"/Users/besk/Desktop/portfolio projects/tiptop/src/components/Accordion.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { ReactComponent as IconPlus } from '@assets/svg/plus.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccordionWrap = styled.div`\n  & > div {\n    &:first-child {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      color: var(--text);\n      padding: 20px 0;\n      font-weight: 400;\n      font-size: 16px;\n      border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n      cursor: pointer;\n      svg {\n        width: 15px;\n        min-width: 15px;\n        transition: 0.3s all;\n        fill: #d7d0c6;\n      }\n      ${_ref => {\n  let {\n    open\n  } = _ref;\n  return open ? `\n                color:#35A6B6;\n                border-bottom: none;\n                svg {\n                    transform: rotate(135deg);\n                    path {\n                        fill:#35A6B6;\n                    }\n                }\n            ` : '';\n}}\n    }\n    &:last-child {\n      transition: all 0.3s;\n      color: var(--subtext);\n      font-size: 14px;\n      line-height: 24px;\n      ${_ref2 => {\n  let {\n    open\n  } = _ref2;\n  return open ? `\n                max-height: 500px;\n                opacity: 1;\n                padding: 10px 20px 20px 0;\n                border-bottom: 1px solid rgba(255,255,255, 0.2);\n            ` : `\n                max-height: 0;\n                overflow: hidden;\n                opacity: 0;\n            `;\n}}\n    }\n  }\n`;\n_c = AccordionWrap;\nconst Accordion = _ref3 => {\n  _s();\n  let {\n    title,\n    content,\n    children\n  } = _ref3;\n  const [open, setOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(AccordionWrap, {\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setOpen(!open),\n      children: [title, \" \", /*#__PURE__*/_jsxDEV(IconPlus, {\n        fill: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: content || children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Accordion, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c2 = Accordion;\nexport default Accordion;\nvar _c, _c2;\n$RefreshReg$(_c, \"AccordionWrap\");\n$RefreshReg$(_c2, \"Accordion\");","map":{"version":3,"names":["React","useState","styled","ReactComponent","IconPlus","AccordionWrap","div","open","Accordion","title","content","children","setOpen"],"sources":["/Users/besk/Desktop/portfolio projects/tiptop/src/components/Accordion.tsx"],"sourcesContent":["import React, { useState, ReactNode } from 'react';\nimport styled from 'styled-components';\nimport { ReactComponent as IconPlus } from '@assets/svg/plus.svg';\n\ninterface AccordionProps {\n  title: string;\n  content?: string;\n  children?: ReactNode;\n}\n\ninterface AccordionWrapProps {\n  open?: boolean;\n}\n\nconst AccordionWrap = styled.div<AccordionWrapProps>`\n  & > div {\n    &:first-child {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      color: var(--text);\n      padding: 20px 0;\n      font-weight: 400;\n      font-size: 16px;\n      border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n      cursor: pointer;\n      svg {\n        width: 15px;\n        min-width: 15px;\n        transition: 0.3s all;\n        fill: #d7d0c6;\n      }\n      ${({ open }) =>\n        open\n          ? `\n                color:#35A6B6;\n                border-bottom: none;\n                svg {\n                    transform: rotate(135deg);\n                    path {\n                        fill:#35A6B6;\n                    }\n                }\n            `\n          : ''}\n    }\n    &:last-child {\n      transition: all 0.3s;\n      color: var(--subtext);\n      font-size: 14px;\n      line-height: 24px;\n      ${({ open }) =>\n        open\n          ? `\n                max-height: 500px;\n                opacity: 1;\n                padding: 10px 20px 20px 0;\n                border-bottom: 1px solid rgba(255,255,255, 0.2);\n            `\n          : `\n                max-height: 0;\n                overflow: hidden;\n                opacity: 0;\n            `}\n    }\n  }\n`;\n\nconst Accordion: React.FC<AccordionProps> = ({ title, content, children }) => {\n  const [open, setOpen] = useState<boolean>(false);\n\n  return (\n    <AccordionWrap open={open}>\n      <div onClick={() => setOpen(!open)}>\n        {title} <IconPlus fill=\"black\" />\n      </div>\n      <div>{content || children}</div>\n    </AccordionWrap>\n  );\n};\n\nexport default Accordion;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,cAAc,IAAIC,QAAQ,QAAQ,sBAAsB;AAAC;AAYlE,MAAMC,aAAa,GAAGH,MAAM,CAACI,GAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;EAAA,IAAC;IAAEC;EAAK,CAAC;EAAA,OACTA,IAAI,GACC;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,GACD,EAAE;AAAA,CAAC;AACf;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;EAAA,IAAC;IAAEA;EAAK,CAAC;EAAA,OACTA,IAAI,GACC;AACb;AACA;AACA;AACA;AACA,aAAa,GACA;AACb;AACA;AACA;AACA,aAAa;AAAA,CAAC;AACd;AACA;AACA,CAAC;AAAC,KApDIF,aAAa;AAsDnB,MAAMG,SAAmC,GAAG,SAAkC;EAAA;EAAA,IAAjC;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAS,CAAC;EACvE,MAAM,CAACJ,IAAI,EAAEK,OAAO,CAAC,GAAGX,QAAQ,CAAU,KAAK,CAAC;EAEhD,oBACE,QAAC,aAAa;IAAC,IAAI,EAAEM,IAAK;IAAA,wBACxB;MAAK,OAAO,EAAE,MAAMK,OAAO,CAAC,CAACL,IAAI,CAAE;MAAA,WAChCE,KAAK,EAAC,GAAC,uBAAC,QAAQ;QAAC,IAAI,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7B,eACN;MAAA,UAAMC,OAAO,IAAIC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAClB;AAEpB,CAAC;AAAC,GAXIH,SAAmC;AAAA,MAAnCA,SAAmC;AAazC,eAAeA,SAAS;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}