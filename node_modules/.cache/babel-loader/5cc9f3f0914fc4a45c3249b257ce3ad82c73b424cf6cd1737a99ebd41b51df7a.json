{"ast":null,"code":"var _jsxFileName = \"/Users/besk/Desktop/portfolio projects/tiptop/src/components/SubscribeForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Input from '@components/Input';\nimport Button from '@components/Button';\nimport styled from 'styled-components';\nimport Checkbox from './CheckBox';\nimport { mobile } from '@styles/breakpoints';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FormStyles = styled.form`\n  & > div > input {\n    position: relative;\n    max-width: 520px;\n    margin: 0 auto;\n    border-radius: 8px;\n    background: #d9d9d9;\n    font-size: 18px;\n  }\n  & > button {\n    margin-top: 20px;\n  }\n  & > img {\n    width: 120px;\n  }\n  @media ${mobile} {\n    button {\n      width: 100%;\n    }\n  }\n`;\n_c = FormStyles;\nconst SubscribeForm = _ref => {\n  _s();\n  let {\n    buttonText,\n    checkbox,\n    onSubmit,\n    email,\n    setEmail\n  } = _ref;\n  const [checked, setChecked] = useState(false);\n  return /*#__PURE__*/_jsxDEV(FormStyles, {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      type: \"email\",\n      pattern: \"[^@\\\\s]+@[^@\\\\s]+\\\\.[^@\\\\s]+\",\n      placeholder: \"Enter email address\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), checkbox && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        value: checked,\n        onChange: () => setChecked(!checked),\n        label: ' I accept to the privacy policy and agree to receive updates from TipTop.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        disabled: !checked,\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), !checkbox && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      children: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(SubscribeForm, \"OiiR1BYWvMsLHMiD2uYkeM3TCO0=\");\n_c2 = SubscribeForm;\nexport default SubscribeForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormStyles\");\n$RefreshReg$(_c2, \"SubscribeForm\");","map":{"version":3,"names":["React","useState","Input","Button","styled","Checkbox","mobile","FormStyles","form","SubscribeForm","buttonText","checkbox","onSubmit","email","setEmail","checked","setChecked","e","target","value"],"sources":["/Users/besk/Desktop/portfolio projects/tiptop/src/components/SubscribeForm.tsx"],"sourcesContent":["import React, { useState, FormEvent } from 'react';\nimport Input from '@components/Input';\nimport Button from '@components/Button';\nimport styled from 'styled-components';\nimport Checkbox from './CheckBox';\nimport { mobile } from '@styles/breakpoints';\n\nconst FormStyles = styled.form`\n  & > div > input {\n    position: relative;\n    max-width: 520px;\n    margin: 0 auto;\n    border-radius: 8px;\n    background: #d9d9d9;\n    font-size: 18px;\n  }\n  & > button {\n    margin-top: 20px;\n  }\n  & > img {\n    width: 120px;\n  }\n  @media ${mobile} {\n    button {\n      width: 100%;\n    }\n  }\n`;\ninterface SubscribeFormProps {\n  buttonText: string;\n  checkbox: boolean;\n  onSubmit: (e: FormEvent<HTMLFormElement>) => void;\n  response: string;\n  email: string;\n  setEmail: (value: string) => void;\n}\n\nconst SubscribeForm: React.FC<SubscribeFormProps> = ({\n  buttonText,\n  checkbox,\n  onSubmit,\n  email,\n  setEmail,\n}) => {\n  const [checked, setChecked] = useState(false);\n\n  return (\n    <FormStyles onSubmit={onSubmit}>\n      <Input\n        value={email}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setEmail(e.target.value)}\n        type=\"email\"\n        pattern=\"[^@\\s]+@[^@\\s]+\\.[^@\\s]+\"\n        placeholder=\"Enter email address\"\n        required\n      />\n      {checkbox && (\n        <>\n          <Checkbox\n            value={checked}\n            onChange={() => setChecked(!checked)}\n            label={' I accept to the privacy policy and agree to receive updates from TipTop.'}\n          />\n          <Button variant=\"primary\" disabled={!checked}>\n            {buttonText}\n          </Button>\n        </>\n      )}\n      {!checkbox && <Button variant=\"primary\">{buttonText}</Button>}\n    </FormStyles>\n  );\n};\n\nexport default SubscribeForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAClD,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,MAAM,QAAQ,qBAAqB;AAAC;AAAA;AAE7C,MAAMC,UAAU,GAAGH,MAAM,CAACI,IAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAWF,MAAO;AAClB;AACA;AACA;AACA;AACA,CAAC;AAAC,KApBIC,UAAU;AA8BhB,MAAME,aAA2C,GAAG,QAM9C;EAAA;EAAA,IAN+C;IACnDC,UAAU;IACVC,QAAQ;IACRC,QAAQ;IACRC,KAAK;IACLC;EACF,CAAC;EACC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE7C,oBACE,QAAC,UAAU;IAAC,QAAQ,EAAEW,QAAS;IAAA,wBAC7B,QAAC,KAAK;MACJ,KAAK,EAAEC,KAAM;MACb,QAAQ,EAAGI,CAAsC,IAAKH,QAAQ,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAC/E,IAAI,EAAC,OAAO;MACZ,OAAO,EAAC,8BAA0B;MAClC,WAAW,EAAC,qBAAqB;MACjC,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACR,EACDR,QAAQ,iBACP;MAAA,wBACE,QAAC,QAAQ;QACP,KAAK,EAAEI,OAAQ;QACf,QAAQ,EAAE,MAAMC,UAAU,CAAC,CAACD,OAAO,CAAE;QACrC,KAAK,EAAE;MAA4E;QAAA;QAAA;QAAA;MAAA,QACnF,eACF,QAAC,MAAM;QAAC,OAAO,EAAC,SAAS;QAAC,QAAQ,EAAE,CAACA,OAAQ;QAAA,UAC1CL;MAAU;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA,gBAEZ,EACA,CAACC,QAAQ,iBAAI,QAAC,MAAM;MAAC,OAAO,EAAC,SAAS;MAAA,UAAED;IAAU;MAAA;MAAA;MAAA;IAAA,QAAU;EAAA;IAAA;IAAA;IAAA;EAAA,QAClD;AAEjB,CAAC;AAAC,GAlCID,aAA2C;AAAA,MAA3CA,aAA2C;AAoCjD,eAAeA,aAAa;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}